{"version":3,"sources":["components/AboutMe.js","components/Navbar.js","components/MenuOption.js","components/SideMenu.js","Data.js","components/ResumeItem.js","DisplayContext.js","SnakeSketch.js","components/SnakeGame.js","components/Skills.js","components/MainContent.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","MenuOption","props","styleName","selected","onClick","label","menuItems","SideMenu","map","itm","menuChoice","handleChoice","RESUME","itemType","image","title","subtitle","location","date","listItems","SKILL_CLASSES","name","class","ResumeItem","Paper","elevation","borderRadius","src","process","data","alt","height","width","idx","ResumeList","filter","DisplayContext","createContext","pics","i","push","shuffle","array","length","j","Math","floor","random","temp","p5SnakeColor","bigSnake","AboutMe","BasicImageGrid","CANVAS_WIDTH","CANVAS_HEIGHT","BLOCK_WIDTH","COLOR_SNAKE","COLOR_DEADSNAKE","COLOR_FOOD","gameStarted","totnum","numEaten","food","xAdd","yAdd","gameEnded","score","setup","p5","parentRef","createCanvas","parent","colorMode","RGB","frameRate","background","color","draw","Snake","clear","placeFood","renderMe","move","eat","xOpt","yOpt","x","y","fruitsnack","GameBlock","makeFruity","forEach","snack","gameOver","console","log","changeColor","document","addEventListener","e","indexOf","keyCode","preventDefault","code","startX","startY","this","chunks","growing","chunk","newColor","myColor","copyHead","headAsCopy","incrementItem","shift","snakeChunk","newFood","eatenSnacks","_xval","_yval","fill","stroke","rect","SnakeGame","useState","gameScore","setgameScore","setRestartMessage","scoreText","scoreIntervalId","window","setInterval","clearInterval","Skills","contentOptions","Education","Experience","MainContent","useContext","setMenuChoice","target","innerHTML","App","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7b321c98.chunk.js","sourcesContent":["import { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"../Content.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\n\r\n// get paths for collage photos\r\nconst pics = [];\r\nfor (let i = 1; i < 17; i++) {\r\n  pics.push(\"/collage/col\" + i + \".jpg\");\r\n}\r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    let temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n}\r\n\r\nshuffle(pics);\r\n\r\nexport const AboutMe = () => {\r\n  shuffle(pics);\r\n  return (\r\n    <section className=\"mainCard\">\r\n      {/* <ImageGridList /> */}\r\n      <BasicImageGrid />\r\n    </section>\r\n  );\r\n};\r\n\r\nconst BasicImageGrid = () => {\r\n  return (\r\n    <section class=\"collageContainer\">\r\n      {pics.map((title, idx) => (\r\n        <img\r\n          src={process.env.PUBLIC_URL + title}\r\n          alt={\"image \" + idx}\r\n          className=\"profileImage\"\r\n        />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     display: \"flex\",\r\n//     flexWrap: \"wrap\",\r\n//     justifyContent: \"space-around\",\r\n//     overflow: \"hidden\",\r\n//     backgroundColor: theme.palette.background.paper,\r\n//   },\r\n//   gridList: {\r\n//     // width: \"auto\",\r\n//   },\r\n// }));\r\n\r\n// const ImageGridList = () => {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <GridList cellHeight={200} className={classes.gridList} cols={4}>\r\n//         {pics.map((tile, idx) => (\r\n//           <GridListTile key={idx} cols={tile.cols || 1}>\r\n//             <img src={process.env.PUBLIC_URL + tile} alt={\"image \" + idx} />\r\n//           </GridListTile>\r\n//         ))}\r\n//       </GridList>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// also, would be cool to have a list of adjectives that describe...\r\n// the adjectives \"type themselves\" as user scrolls down the page.\r\n\r\n// blur images while loading https://css-tricks.com/the-blur-up-technique-for-loading-background-images/\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nexport const Navbar = () => {\r\n  return (\r\n    <header className=\"mainHeader\">\r\n      {/* <h1 className=\"title\">.ryanjensen()</h1> */}\r\n      <h1 className=\"title\">Ryan Jensen</h1>\r\n    </header>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nexport const MenuOption = (props) => {\r\n    let styleName = '';\r\n\r\n    if(props.selected) {\r\n        styleName = 'selected';\r\n    }\r\n\r\n    return (\r\n        <li className={styleName} onClick={props.onClick}>{props.label}</li>\r\n    )\r\n}","import React from \"react\";\r\nimport \"../App.css\";\r\nimport { MenuOption } from \"./MenuOption\";\r\n\r\n// const menuItems = [\"Education\", \"Experience\", \"Skills\", \"About Me\", \"For Fun\"];\r\nconst menuItems = [\"Education\", \"Experience\", \"About Me\", \"For Fun\"];\r\n\r\nexport const SideMenu = (props) => {\r\n  return (\r\n    <nav>\r\n      <ul className=\"menu\">\r\n        {menuItems.map((itm) => (\r\n          <MenuOption\r\n            label={itm}\r\n            selected={itm === props.menuChoice}\r\n            onClick={props.handleChoice}\r\n            key={itm}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","// should do an en dash inbetween dates\r\n\r\nexport const RESUME = [\r\n  {\r\n    itemType: \"Education\",\r\n    image: \"/byu.png\",\r\n    title: \"Brigham Young University\",\r\n    subtitle: \"MS, BS Accounting | Minor, Information Systems\",\r\n    location: \"Provo, UT\",\r\n    date: \"Class of 2021\",\r\n    listItems: [\r\n      \"GPA: 3.80 / 4.00\",\r\n      \"Vice President of the BYU Personal Finance Club\",\r\n      \"Half-Tuition Academic Scholarship recipient (2017-2020)\",\r\n      \"Participant in EY and PwC Accounting & Advisory Case Competitions at BYU (2019 and 2020 respectively)\",\r\n    ],\r\n  },\r\n  {\r\n    itemType: \"Experience\",\r\n    title: \"Ivanti\",\r\n    image: \"/ivanti.png\",\r\n    subtitle: \"Accountant\",\r\n    location: \"South Jordan, UT\",\r\n    date: \"May 2018 - Present\",\r\n    listItems: [\r\n      \"Automated creation of quarterly journal entries with VBA, regularly saving hours of time\",\r\n      \"Reduced a 6-hour monthly data splitting process to less than 2 minutes with VBA \",\r\n      \"Developed an RPA bot to pull FX rates online, create an audit trail in Excel, and upload to SAP\",\r\n      \"Created an automated tracking system for bank transactions in Excel to eliminate 30 minutes of daily data entry\",\r\n    ],\r\n  },\r\n  {\r\n    itemType: \"Experience\",\r\n    title: \"PwC\",\r\n    image: \"/pwc.png\",\r\n    subtitle: \"Risk Assurance Intern\",\r\n    location: \"Salt Lake City, UT\",\r\n    date: \"Jul - Aug 2020\",\r\n    listItems: [\r\n      \"Developed skills in data automation using UiPath, Alteryx, and Tableau\",\r\n      \"Shadowed an experienced risk assurance engagement team and learned about the audit process\",\r\n    ],\r\n  },\r\n  {\r\n    itemType: \"Experience\",\r\n    title: \"Brigham Young University\",\r\n    image: \"/byu.png\",\r\n    subtitle: \"Research Assistant\",\r\n    location: \"Provo, UT\",\r\n    date: \"Dec 2019 - Apr 2020\",\r\n    listItems: [\r\n      \"Created content to showcase real-world methods to automate and improve accounting-related tasks\",\r\n      \"Facilitated student engagement on this project by collecting content and ensuring high-quality writing\",\r\n    ],\r\n  },\r\n  {\r\n    itemType: \"Experience\",\r\n    title: \"Utah Community Credit Union\",\r\n    image: \"/uccu.png\",\r\n    subtitle: \"Accounting Assistant\",\r\n    location: \"Provo, UT\",\r\n    date: \"Mar 2017 - May 2018\",\r\n    listItems: [\r\n      \"Reduced working time by 50% in monthly expense report processing by writing VBA macros\",\r\n      \"Developed a program in VBA to scrape data from a large recurring, vendor-provided report and store the data in Excel\",\r\n    ],\r\n  },\r\n];\r\n\r\nexport const COURSEWORK = [\r\n  {\r\n    category: \"Accounting\",\r\n    courses: [\r\n      { name: \"ACC 541\", about: \"Financial Statement Analysis\", skills: \"\" },\r\n      { name: \"ACC 540\", about: \"Advanced Financial Accounting\", skills: \"\" },\r\n      { name: \"ACC 531\", about: \"Advanced Management Accounting\", skills: \"\" },\r\n      { name: \"ACC 540\", about: \"Advanced Financial Accounting\", skills: \"\" },\r\n      {\r\n        name: \"ACC 530\",\r\n        about: \"Advanced Financial Statement Auditing\",\r\n        skills: \"\",\r\n      },\r\n      { name: \"ACC 522\", about: \"Advanced Taxation\", skills: \"\" },\r\n      { name: \"ACC 453\", about: \"Money & Economics\", skills: \"\" },\r\n      { name: \"ACC 241\", about: \"Business Law\", skills: \"\" },\r\n    ],\r\n  },\r\n  {\r\n    category: \"Information Systems\",\r\n    courses: [\r\n      {\r\n        name: \"IS 555\",\r\n        about: \"Advanced Data Analytics\",\r\n        skills: \"Python, Machine Learning\",\r\n      },\r\n      { name: \"IS 520\", about: \"Spreadsheet Automation\", skills: \"VBA\" },\r\n      { name: \"IS 115\", about: \"Intro to Python Analytics\", skills: \"Python\" },\r\n      { name: \"IS 303\", about: \"Intro to Computer Programming\", skills: \"C#\" },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const SKILL_CLASSES = [\r\n  { name: \"javascript\", class: \"devicon-javascript-plain\" },\r\n  { name: \"python\", class: \"devicon-python-plain\" },\r\n  { name: \"csharp\", class: \"devicon-csharp-plain\" },\r\n  { name: \"html\", class: \"devicon-html5-plain\" },\r\n  { name: \"css\", class: \"devicon-css3-plain\" },\r\n  { name: \"react\", class: \"devicon-react-original\" },\r\n  { name: \"materialui\", class: \"devicon-materialui-plain\" },\r\n  { name: \"bash\", class: \"devicon-bash-plain\" },\r\n  { name: \"npm\", class: \"devicon-npm-original-wordmark\" },\r\n  { name: \"firebase\", class: \"devicon-firebase-plain\" },\r\n  { name: \"git\", class: \"devicon-git-plain\" },\r\n  { name: \"github\", class: \"devicon-github-original\" },\r\n];\r\n","import { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"../Content.css\";\r\nimport { RESUME, COURSEWORK } from \"../Data\";\r\n\r\nconst ResumeItem = (props) => {\r\n  return (\r\n    <article>\r\n      <Paper elevation={1} borderRadius={7}>\r\n        <div className=\"mainCard\">\r\n          <header>\r\n            <div className=\"logo\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + props.data.image}\r\n                alt={props.data.title}\r\n                height={50}\r\n                width={50}\r\n              ></img>\r\n            </div>\r\n            <div className=\"title\">\r\n              <h1>{props.data.title}</h1>\r\n              <h2>{props.data.subtitle}</h2>\r\n            </div>\r\n            <div className=\"locationTime\">\r\n              <h2>{props.data.location}</h2>\r\n              <h2>{props.data.date}</h2>\r\n            </div>\r\n          </header>\r\n\r\n          <ul>\r\n            {props.data.listItems.map((itm, idx) => (\r\n              <li key={idx}>{itm}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          {/* {props.data.itemType === \"Education\" ? <Coursework /> : <div />} */}\r\n        </div>\r\n      </Paper>\r\n    </article>\r\n  );\r\n};\r\n\r\n// I don't love this yet. Haven't styled it yet but it's a lot of data.\r\nconst Coursework = (props) => {\r\n  return (\r\n    <section>\r\n      {COURSEWORK.map((course) => (\r\n        <section>\r\n          <h1>{course.category}</h1>\r\n          {course.courses.map((schoolClass) => (\r\n            <div>\r\n              <h2>\r\n                {schoolClass.name}: {schoolClass.about}\r\n              </h2>\r\n              {/* <p>{schoolClass.about}</p> */}\r\n              <p>{schoolClass.skills}</p>\r\n            </div>\r\n          ))}\r\n        </section>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport const ResumeList = (props) => {\r\n  return RESUME.filter(\r\n    (itm) => itm.itemType === props.itemType\r\n  ).map((itm, idx) => <ResumeItem data={itm} key={idx} />);\r\n};\r\n","import { createContext } from 'react';\r\n\r\nexport const DisplayContext = createContext(null);","import p5 from \"p5\";\r\n\r\n// Constants: gameplay mechanics\r\nconst GAME_FRAME_RATE = 10;\r\nconst FOOD_SPAWN_RATE = 15;\r\nconst FOOD_SCORE_MULTIPLE = 10;\r\n\r\n// Constants: positioning\r\nconst CANVAS_WIDTH = 400;\r\nconst CANVAS_HEIGHT = 400;\r\nconst BLOCK_WIDTH = 20;\r\nconst BLOCK_STROKE_WIDTH = 10;\r\nconst SNAKE_START_X = 200;\r\nconst SNAKE_START_Y = 200;\r\n\r\n// Constants: colors\r\nconst COLOR_BACKGROUND = 25;\r\nconst COLOR_SNAKE = [116, 196, 255];\r\nconst COLOR_DEADSNAKE = [255, 61, 33];\r\nconst COLOR_FOOD = [104, 253, 69];\r\n\r\n// Game state\r\nlet p5SnakeColor;\r\nlet gameStarted = 0;\r\nlet totnum = 0;\r\nlet numEaten = 0;\r\nlet bigSnake;\r\nlet food = [];\r\nlet xAdd = 0;\r\nlet yAdd = 0;\r\n\r\nexport let gameEnded = 0;\r\nexport let score = 0;\r\n\r\nexport const setup = (p5, parentRef) => {\r\n  p5.createCanvas(CANVAS_WIDTH, CANVAS_HEIGHT).parent(parentRef);\r\n  p5.colorMode(p5.RGB);\r\n  p5.frameRate(GAME_FRAME_RATE);\r\n  p5.background(COLOR_BACKGROUND);\r\n  p5SnakeColor = p5.color(COLOR_SNAKE);\r\n};\r\n\r\nexport const draw = (p5) => {\r\n  startGame();\r\n  p5.clear();\r\n  p5.background(COLOR_BACKGROUND);\r\n  placeFood(p5);\r\n  bigSnake.renderMe(p5);\r\n  bigSnake.move(p5);\r\n  bigSnake.eat();\r\n  totnum++;\r\n};\r\n\r\nexport const resetGame = () => {\r\n  //TODO: implement something like this:\r\n  //https://www.youtube.com/watch?v=lm8Y8TD4CTM&ab_channel=TheCodingTrain\r\n  //use p5DOM to reset the sketch....\r\n  gameStarted = 0;\r\n  totnum = 0;\r\n  numEaten = 0;\r\n  food = [];\r\n  xAdd = 0;\r\n  yAdd = 0;\r\n  gameEnded = 0;\r\n  score = 0;\r\n};\r\n\r\nfunction startGame() {\r\n  if (gameStarted === 0) {\r\n    bigSnake = new Snake(SNAKE_START_X, SNAKE_START_Y);\r\n    gameStarted = 1; // so that we never do this again\r\n  }\r\n}\r\n\r\ndocument.addEventListener(\"keydown\", handleKeyPress);\r\n\r\nfunction handleKeyPress(e) {\r\n  if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  if (e.code === \"ArrowUp\") {\r\n    xAdd = 0;\r\n    yAdd = BLOCK_WIDTH * -1;\r\n  } else if (e.code === \"ArrowDown\") {\r\n    xAdd = 0;\r\n    yAdd = BLOCK_WIDTH;\r\n  } else if (e.code === \"ArrowRight\") {\r\n    xAdd = BLOCK_WIDTH;\r\n    yAdd = 0;\r\n  } else if (e.code === \"ArrowLeft\") {\r\n    xAdd = BLOCK_WIDTH * -1;\r\n    yAdd = 0;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction placeFood(p5) {\r\n  // list the grid options\r\n  let xOpt = [];\r\n  let yOpt = [];\r\n\r\n  for (let x = 0; x < CANVAS_WIDTH; x += BLOCK_WIDTH) {\r\n    xOpt.push(x);\r\n  }\r\n\r\n  for (let y = 0; y < CANVAS_HEIGHT; y += BLOCK_WIDTH) {\r\n    yOpt.push(y);\r\n  }\r\n\r\n  if (totnum % FOOD_SPAWN_RATE === 0) {\r\n    const x = xOpt[Math.floor(Math.random() * xOpt.length)];\r\n    const y = yOpt[Math.floor(Math.random() * yOpt.length)];\r\n    const fruitsnack = new GameBlock(x, y);\r\n\r\n    fruitsnack.makeFruity(p5);\r\n    food.push(fruitsnack);\r\n  }\r\n  food.forEach((snack) => snack.renderMe(p5));\r\n}\r\n\r\nfunction gameOver(p5) {\r\n  console.log(\"GAME ENDED!!\");\r\n\r\n  gameEnded = 1;\r\n  bigSnake.changeColor(COLOR_DEADSNAKE);\r\n\r\n  // redraw board so we can turn the snake red\r\n  // TODO: consider putting this within the Snake.renderMe() method\r\n\r\n  p5.clear();\r\n  p5.background(COLOR_BACKGROUND);\r\n  placeFood(p5);\r\n  bigSnake.renderMe(p5);\r\n  p5.frameRate(0);\r\n\r\n  console.log(\"final score: \" + numEaten * FOOD_SCORE_MULTIPLE);\r\n}\r\n\r\nclass Snake {\r\n  constructor(startX, startY) {\r\n    this.chunks = [new GameBlock(startX, startY)];\r\n    this.growing = false;\r\n  }\r\n\r\n  renderMe(p5) {\r\n    this.chunks.forEach((chunk) => chunk.renderMe(p5));\r\n  }\r\n\r\n  changeColor(newColor) {\r\n    this.chunks.forEach((chunk) => {\r\n      chunk.myColor = newColor;\r\n    });\r\n  }\r\n\r\n  move(p5) {\r\n    let copyHead = this.headAsCopy;\r\n    copyHead.incrementItem(); // increment it\r\n    this.chunks.push(copyHead); // put it back on the snake at front\r\n\r\n    if (this.growing === false) {\r\n      this.chunks.shift(); // remove bottom chunk\r\n    }\r\n\r\n    //check for cannibalism\r\n    if (this.chunks.length > 1) {\r\n      for (let i = 0; i < this.chunks.length - 1; i++) {\r\n        const snakeChunk = this.chunks[i];\r\n        if (snakeChunk.x === copyHead.x && snakeChunk.y === copyHead.y) {\r\n          gameOver(p5);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  eat() {\r\n    let copyHead = this.headAsCopy;\r\n    let newFood = []; // for all the stuff snake doesn't eat.\r\n\r\n    this.growing = false;\r\n\r\n    if (food.length > 0) {\r\n      let eatenSnacks = food.filter((snack) => {\r\n        if (snack.x === copyHead.x && snack.y === copyHead.y) {\r\n          return snack;\r\n        } else {\r\n          newFood.push(snack);\r\n        }\r\n      });\r\n\r\n      food = newFood; // replace food with the remaining fruitsnacks\r\n\r\n      if (eatenSnacks.length > 0) {\r\n        numEaten++;\r\n        score += FOOD_SCORE_MULTIPLE;\r\n        this.growing = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  get headAsCopy() {\r\n    let newHead = new GameBlock(\r\n      this.chunks[this.chunks.length - 1].x,\r\n      this.chunks[this.chunks.length - 1].y\r\n    );\r\n    return newHead;\r\n  }\r\n}\r\n\r\nclass GameBlock {\r\n  constructor(x, y) {\r\n    this._xval = x;\r\n    this._yval = y;\r\n    this.myColor = p5SnakeColor; // default to snake colors\r\n  }\r\n\r\n  get x() {\r\n    return this._xval;\r\n  }\r\n\r\n  get y() {\r\n    return this._yval;\r\n  }\r\n\r\n  makeFruity(p5) {\r\n    this.myColor = p5.color(COLOR_FOOD); // re-use this class for fruitsnacks. make those fruity.\r\n  }\r\n\r\n  incrementItem() {\r\n    this._xval += xAdd;\r\n    this._yval += yAdd;\r\n\r\n    // handle running off the board, re-looping\r\n    if (this._xval > CANVAS_WIDTH - 1) {\r\n      this._xval = 0;\r\n    } else if (this._xval < 0) {\r\n      this._xval = CANVAS_WIDTH;\r\n    }\r\n\r\n    if (this._yval > CANVAS_HEIGHT - 1) {\r\n      this._yval = 0;\r\n    } else if (this._yval < 0) {\r\n      this._yval = CANVAS_HEIGHT;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  renderMe(p5) {\r\n    p5.fill(this.myColor);\r\n    p5.stroke(BLOCK_STROKE_WIDTH);\r\n    p5.rect(this._xval, this._yval, BLOCK_WIDTH, BLOCK_WIDTH);\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Sketch from \"react-p5\";\r\nimport { setup, draw, score, gameEnded, resetGame } from \"../SnakeSketch\";\r\nimport \"../Content.css\";\r\n\r\nexport const SnakeGame = (props) => {\r\n  let [gameScore, setgameScore] = useState(0);\r\n  let [restartMessage, setRestartMessage] = useState(\"\");\r\n  let scoreText = \"\";\r\n\r\n  const handleRestart = () => {\r\n    resetGame();\r\n    setgameScore(0);\r\n  };\r\n\r\n  // does not work\r\n  // useEffect(() => {\r\n  //   setgameScore(score);\r\n  // }, []);\r\n\r\n  const updateScore = () => {\r\n    console.log(\"score: \", score);\r\n    if (score !== gameScore) {\r\n      setgameScore(score);\r\n      clearInterval(scoreIntervalId);\r\n      console.log(\"cleared interval:\", scoreIntervalId);\r\n    }\r\n    if (gameEnded) {\r\n      clearInterval(scoreIntervalId);\r\n      setgameScore(score);\r\n      setRestartMessage(`use arrow keys to restart`);\r\n      // console.log(\"current interval id: \" + scoreIntervalId);\r\n    }\r\n  };\r\n\r\n  let scoreIntervalId = window.setInterval(updateScore, 100);\r\n  // console.log(\"initial interval id: \" + scoreIntervalId);\r\n\r\n  gameEnded\r\n    ? (scoreText = `final score: ${score}`)\r\n    : (scoreText = `score: ${score}`);\r\n\r\n  return (\r\n    <section>\r\n      <h1 className=\"gameHeader\">use arrow keys.</h1>\r\n      <div className=\"gameContainer\">\r\n        <Sketch setup={setup} draw={draw} />\r\n      </div>\r\n      <h2 className=\"gameHeader\">{scoreText}</h2>\r\n      {/* {gameEnded ? (\r\n        <button onClick={handleRestart}>Restart</button>\r\n      ) : (\r\n        <div></div>\r\n      )} */}\r\n      {/* <h2 className=\"gameHeader\">{restartMessage}</h2> */}\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SKILL_ICONS, SKILL_CLASSES } from \"../Data\";\r\n\r\nconst style = {\r\n  margin: \"10px\",\r\n};\r\n\r\nexport const Skills = (props) => {\r\n  return (\r\n    <section className=\"iconSet\">\r\n      {SKILL_CLASSES.map((itm) => (\r\n        <div className=\"iconWrapper\">\r\n          <i class={itm.class}></i>\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { SideMenu } from \"./SideMenu\";\r\nimport \"../App.css\";\r\nimport { ResumeList } from \"./ResumeItem\";\r\nimport { DisplayContext } from \"../DisplayContext\";\r\nimport { AboutMe } from \"./AboutMe\";\r\nimport { SnakeGame } from \"./SnakeGame\";\r\nimport { Skills } from \"./Skills\";\r\n\r\nconst contentOptions = {\r\n  Education: <ResumeList itemType=\"Education\" />,\r\n  Experience: (\r\n    <div>\r\n      <ResumeList itemType=\"Experience\" />\r\n      <Skills />\r\n    </div>\r\n  ),\r\n  // Skills: <Skills />,\r\n  \"About Me\": <AboutMe />,\r\n  \"For Fun\": <SnakeGame />,\r\n};\r\n\r\n// in AboutMe, try using an imagelist to display those images. Preformatted and gapped.\r\n// in SnakeGame, add a colorpicker thing to let user choose colors for snake.\r\n\r\nexport const MainContent = () => {\r\n  let { menuChoice, setMenuChoice } = useContext(DisplayContext);\r\n\r\n  const handleChoice = (e) => {\r\n    console.log(e.target.innerHTML);\r\n    setMenuChoice(e.target.innerHTML);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mainBody\">\r\n      <SideMenu handleChoice={handleChoice} menuChoice={menuChoice} />\r\n      <div>{contentOptions[menuChoice]}</div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\nimport { Navbar } from \"./components/Navbar\";\nimport \"./App.css\";\nimport { MainContent } from \"./components/MainContent\";\nimport { DisplayContext } from \"./DisplayContext\";\n\n// DEPLOYMENT:\n\n// npm run deploy\n\n// git add .\n// git commit -m \"Message here\"\n// git push origin master\n\nfunction App() {\n  let [menuChoice, setMenuChoice] = useState(\"Education\");\n\n  return (\n    <div className=\"App container\">\n      <Navbar />\n      <DisplayContext.Provider value={{ menuChoice, setMenuChoice }}>\n        <MainContent />\n      </DisplayContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}