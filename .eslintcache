[{"C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\index.js":"1","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\App.js":"2","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\reportWebVitals.js":"3","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\Navbar.js":"4","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\SideMenu.js":"5","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\MenuOption.js":"6","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\MainContent.js":"7","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\Data.js":"8","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\ResumeItem.js":"9","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\DisplayContext.js":"10","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\AboutMe.js":"11","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\Skills.js":"12","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\SnakeSketch.js":"13","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\snake-game\\SnakeGame.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":629,"mtime":1613423664588,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":259,"mtime":1612918760198,"results":"19","hashOfConfig":"16"},{"size":602,"mtime":1612809924065,"results":"20","hashOfConfig":"16"},{"size":287,"mtime":1612326109461,"results":"21","hashOfConfig":"16"},{"size":1185,"mtime":1616557236663,"results":"22","hashOfConfig":"16"},{"size":4400,"mtime":1613425582095,"results":"23","hashOfConfig":"16"},{"size":1939,"mtime":1613424200225,"results":"24","hashOfConfig":"16"},{"size":92,"mtime":1612456763677,"results":"25","hashOfConfig":"16"},{"size":2150,"mtime":1613425040590,"results":"26","hashOfConfig":"16"},{"size":376,"mtime":1612810374032,"results":"27","hashOfConfig":"16"},{"size":5826,"mtime":1616555903098,"results":"28","hashOfConfig":"16"},{"size":2029,"mtime":1616558346653,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1pnxb44",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\index.js",[],["63","64"],"C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\App.js",[],"C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\reportWebVitals.js",[],"C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\Navbar.js",[],"C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\SideMenu.js",[],"C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\MenuOption.js",[],"C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\MainContent.js",[],"C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\Data.js",[],"C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\ResumeItem.js",["65"],"import { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"../Content.css\";\r\nimport { RESUME, COURSEWORK } from \"../Data\";\r\n\r\nconst ResumeItem = (props) => {\r\n  return (\r\n    <article>\r\n      <Paper elevation={1} borderRadius={7}>\r\n        <div className=\"mainCard\">\r\n          <header>\r\n            <div className=\"logo\">\r\n              <img\r\n                src={process.env.PUBLIC_URL + props.data.image}\r\n                alt={props.data.title}\r\n                height={50}\r\n                width={50}\r\n              ></img>\r\n            </div>\r\n            <div className=\"title\">\r\n              <h1>{props.data.title}</h1>\r\n              <h2>{props.data.subtitle}</h2>\r\n            </div>\r\n            <div className=\"locationTime\">\r\n              <h2>{props.data.location}</h2>\r\n              <h2>{props.data.date}</h2>\r\n            </div>\r\n          </header>\r\n\r\n          <ul>\r\n            {props.data.listItems.map((itm, idx) => (\r\n              <li key={idx}>{itm}</li>\r\n            ))}\r\n          </ul>\r\n\r\n          {/* {props.data.itemType === \"Education\" ? <Coursework /> : <div />} */}\r\n        </div>\r\n      </Paper>\r\n    </article>\r\n  );\r\n};\r\n\r\n// I don't love this yet. Haven't styled it yet but it's a lot of data.\r\nconst Coursework = (props) => {\r\n  return (\r\n    <section>\r\n      {COURSEWORK.map((course) => (\r\n        <section>\r\n          <h1>{course.category}</h1>\r\n          {course.courses.map((schoolClass) => (\r\n            <div>\r\n              <h2>\r\n                {schoolClass.name}: {schoolClass.about}\r\n              </h2>\r\n              {/* <p>{schoolClass.about}</p> */}\r\n              <p>{schoolClass.skills}</p>\r\n            </div>\r\n          ))}\r\n        </section>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport const ResumeList = (props) => {\r\n  return RESUME.filter(\r\n    (itm) => itm.itemType === props.itemType\r\n  ).map((itm, idx) => <ResumeItem data={itm} key={idx} />);\r\n};\r\n","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\DisplayContext.js",[],"C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\AboutMe.js",["66","67","68","69"],"import { Paper } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"../Content.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\n\r\n// get paths for collage photos\r\nconst pics = [];\r\nfor (let i = 1; i < 17; i++) {\r\n  pics.push(\"/collage/col\" + i + \".jpg\");\r\n}\r\n\r\nfunction shuffle(array) {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    let temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n}\r\n\r\nshuffle(pics);\r\n\r\nexport const AboutMe = () => {\r\n  shuffle(pics);\r\n  return (\r\n    <section className=\"mainCard\">\r\n      {/* <ImageGridList /> */}\r\n      <BasicImageGrid />\r\n    </section>\r\n  );\r\n};\r\n\r\nconst BasicImageGrid = () => {\r\n  return (\r\n    <section class=\"collageContainer\">\r\n      {pics.map((title, idx) => (\r\n        <img\r\n          src={process.env.PUBLIC_URL + title}\r\n          alt={\"image \" + idx}\r\n          className=\"profileImage\"\r\n        />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     display: \"flex\",\r\n//     flexWrap: \"wrap\",\r\n//     justifyContent: \"space-around\",\r\n//     overflow: \"hidden\",\r\n//     backgroundColor: theme.palette.background.paper,\r\n//   },\r\n//   gridList: {\r\n//     // width: \"auto\",\r\n//   },\r\n// }));\r\n\r\n// const ImageGridList = () => {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <GridList cellHeight={200} className={classes.gridList} cols={4}>\r\n//         {pics.map((tile, idx) => (\r\n//           <GridListTile key={idx} cols={tile.cols || 1}>\r\n//             <img src={process.env.PUBLIC_URL + tile} alt={\"image \" + idx} />\r\n//           </GridListTile>\r\n//         ))}\r\n//       </GridList>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// also, would be cool to have a list of adjectives that describe...\r\n// the adjectives \"type themselves\" as user scrolls down the page.\r\n\r\n// blur images while loading https://css-tricks.com/the-blur-up-technique-for-loading-background-images/\r\n","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\Skills.js",["70","71"],"import React from \"react\";\r\nimport { SKILL_ICONS, SKILL_CLASSES } from \"../Data\";\r\n\r\nconst style = {\r\n  margin: \"10px\",\r\n};\r\n\r\nexport const Skills = (props) => {\r\n  return (\r\n    <section className=\"iconSet\">\r\n      {SKILL_CLASSES.map((itm) => (\r\n        <div className=\"iconWrapper\">\r\n          <i class={itm.class}></i>\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\SnakeSketch.js",["72"],"// Constants: gameplay mechanics\r\nlet p5Lib;\r\nconst GAME_FRAME_RATE = 10;\r\nconst FOOD_SPAWN_RATE = 15;\r\nconst FOOD_SCORE_MULTIPLE = 10;\r\n\r\n// Constants: positioning\r\nconst CANVAS_WIDTH = 400;\r\nconst CANVAS_HEIGHT = 400;\r\nconst BLOCK_WIDTH = 20;\r\nconst BLOCK_STROKE_WIDTH = 10;\r\nconst SNAKE_START_X = 200;\r\nconst SNAKE_START_Y = 200;\r\n\r\n// Constants: colors\r\nconst COLOR_BACKGROUND = 25;\r\nconst COLOR_SNAKE = [116, 196, 255];\r\nconst COLOR_DEADSNAKE = [255, 61, 33];\r\nconst COLOR_FOOD = [104, 253, 69];\r\n\r\n// Game state\r\nlet p5SnakeColor;\r\nlet gameStarted = 0;\r\nlet totnum = 0;\r\nlet numEaten = 0;\r\nlet bigSnake;\r\nlet food = [];\r\nlet xAdd = 0;\r\nlet yAdd = 0;\r\n\r\nexport let gameEnded = 0;\r\nexport let score = 0;\r\n\r\nexport const setup = (p5, parentRef) => {\r\n  p5Lib = p5;\r\n  p5Lib.createCanvas(CANVAS_WIDTH, CANVAS_HEIGHT).parent(parentRef);\r\n  p5Lib.colorMode(p5Lib.RGB);\r\n  p5Lib.frameRate(GAME_FRAME_RATE);\r\n  p5Lib.background(COLOR_BACKGROUND);\r\n  p5SnakeColor = p5Lib.color(COLOR_SNAKE);\r\n};\r\n\r\nexport const draw = () => {\r\n  startGame();\r\n  p5Lib.clear();\r\n  p5Lib.background(COLOR_BACKGROUND);\r\n  placeFood(p5Lib);\r\n  bigSnake.renderMe(p5Lib);\r\n  bigSnake.move(p5Lib);\r\n  bigSnake.eat();\r\n  totnum++;\r\n};\r\n\r\nfunction startGame() {\r\n  if (gameStarted === 0) {\r\n    bigSnake = new Snake(SNAKE_START_X, SNAKE_START_Y);\r\n    gameStarted = 1; // so that we never do this again\r\n  }\r\n}\r\n\r\nexport const resetGame = (resetFrameRate = false) => {\r\n  gameStarted = 0;\r\n  totnum = 0;\r\n  numEaten = 0;\r\n  food = [];\r\n  xAdd = 0;\r\n  yAdd = 0;\r\n  score = 0;\r\n  gameEnded = 0;\r\n  if (resetFrameRate) {\r\n    p5Lib.frameRate(GAME_FRAME_RATE);\r\n  }\r\n};\r\n\r\ndocument.addEventListener(\"keydown\", handleKeyPress);\r\n\r\nfunction handleKeyPress(e) {\r\n  if ([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  if (e.code === \"ArrowUp\") {\r\n    xAdd = 0;\r\n    yAdd = BLOCK_WIDTH * -1;\r\n  } else if (e.code === \"ArrowDown\") {\r\n    xAdd = 0;\r\n    yAdd = BLOCK_WIDTH;\r\n  } else if (e.code === \"ArrowRight\") {\r\n    xAdd = BLOCK_WIDTH;\r\n    yAdd = 0;\r\n  } else if (e.code === \"ArrowLeft\") {\r\n    xAdd = BLOCK_WIDTH * -1;\r\n    yAdd = 0;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction placeFood() {\r\n  // list the grid options\r\n  let xOpt = [];\r\n  let yOpt = [];\r\n\r\n  for (let x = 0; x < CANVAS_WIDTH; x += BLOCK_WIDTH) {\r\n    xOpt.push(x);\r\n  }\r\n\r\n  for (let y = 0; y < CANVAS_HEIGHT; y += BLOCK_WIDTH) {\r\n    yOpt.push(y);\r\n  }\r\n\r\n  if (totnum % FOOD_SPAWN_RATE === 0) {\r\n    const x = xOpt[Math.floor(Math.random() * xOpt.length)];\r\n    const y = yOpt[Math.floor(Math.random() * yOpt.length)];\r\n    const fruitsnack = new GameBlock(x, y);\r\n\r\n    fruitsnack.makeFruity();\r\n    food.push(fruitsnack);\r\n  }\r\n  food.forEach((snack) => snack.renderMe());\r\n}\r\n\r\nfunction gameOver() {\r\n  console.log(\"GAME ENDED!!\");\r\n\r\n  gameEnded = 1;\r\n  bigSnake.changeColor(COLOR_DEADSNAKE);\r\n\r\n  // redraw board so we can turn the snake red\r\n  // TODO: consider putting this within the Snake.renderMe() method\r\n\r\n  p5Lib.clear();\r\n  p5Lib.background(COLOR_BACKGROUND);\r\n  placeFood(p5Lib);\r\n  bigSnake.renderMe(p5Lib);\r\n  p5Lib.frameRate(0);\r\n\r\n  console.log(\"final score: \" + numEaten * FOOD_SCORE_MULTIPLE);\r\n}\r\n\r\nclass Snake {\r\n  constructor(startX, startY) {\r\n    this.chunks = [new GameBlock(startX, startY)];\r\n    this.growing = false;\r\n  }\r\n\r\n  renderMe() {\r\n    this.chunks.forEach((chunk) => chunk.renderMe());\r\n  }\r\n\r\n  changeColor(newColor) {\r\n    this.chunks.forEach((chunk) => {\r\n      chunk.myColor = newColor;\r\n    });\r\n  }\r\n\r\n  move() {\r\n    let copyHead = this.headAsCopy;\r\n    copyHead.incrementItem(); // increment it\r\n    this.chunks.push(copyHead); // put it back on the snake at front\r\n\r\n    if (this.growing === false) {\r\n      this.chunks.shift(); // remove bottom chunk\r\n    }\r\n\r\n    //check for cannibalism\r\n    if (this.chunks.length > 1) {\r\n      for (let i = 0; i < this.chunks.length - 1; i++) {\r\n        const snakeChunk = this.chunks[i];\r\n        if (snakeChunk.x === copyHead.x && snakeChunk.y === copyHead.y) {\r\n          gameOver();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  eat() {\r\n    let copyHead = this.headAsCopy;\r\n    let newFood = []; // for all the stuff snake doesn't eat.\r\n\r\n    this.growing = false;\r\n\r\n    if (food.length > 0) {\r\n      let eatenSnacks = food.filter((snack) => {\r\n        if (snack.x === copyHead.x && snack.y === copyHead.y) {\r\n          return snack;\r\n        } else {\r\n          newFood.push(snack);\r\n        }\r\n      });\r\n\r\n      food = newFood; // replace food with the remaining fruitsnacks\r\n\r\n      if (eatenSnacks.length > 0) {\r\n        numEaten++;\r\n        score += FOOD_SCORE_MULTIPLE;\r\n        this.growing = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  get headAsCopy() {\r\n    let newHead = new GameBlock(\r\n      this.chunks[this.chunks.length - 1].x,\r\n      this.chunks[this.chunks.length - 1].y\r\n    );\r\n    return newHead;\r\n  }\r\n}\r\n\r\nclass GameBlock {\r\n  constructor(x, y) {\r\n    this._xval = x;\r\n    this._yval = y;\r\n    this.myColor = p5SnakeColor; // default to snake colors\r\n  }\r\n\r\n  get x() {\r\n    return this._xval;\r\n  }\r\n\r\n  get y() {\r\n    return this._yval;\r\n  }\r\n\r\n  makeFruity() {\r\n    this.myColor = p5Lib.color(COLOR_FOOD); // re-use this class for fruitsnacks. make those fruity.\r\n  }\r\n\r\n  incrementItem() {\r\n    this._xval += xAdd;\r\n    this._yval += yAdd;\r\n\r\n    // handle running off the board, re-looping\r\n    if (this._xval > CANVAS_WIDTH - 1) {\r\n      this._xval = 0;\r\n    } else if (this._xval < 0) {\r\n      this._xval = CANVAS_WIDTH;\r\n    }\r\n\r\n    if (this._yval > CANVAS_HEIGHT - 1) {\r\n      this._yval = 0;\r\n    } else if (this._yval < 0) {\r\n      this._yval = CANVAS_HEIGHT;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  renderMe() {\r\n    p5Lib.fill(this.myColor);\r\n    p5Lib.stroke(BLOCK_STROKE_WIDTH);\r\n    p5Lib.rect(this._xval, this._yval, BLOCK_WIDTH, BLOCK_WIDTH);\r\n  }\r\n}\r\n","C:\\Users\\Ryan.Jensen2\\Documents\\GitHub\\professional\\src\\components\\snake-game\\SnakeGame.js",["73"],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":44,"column":7,"nodeType":"80","messageId":"81","endLine":44,"endColumn":17},{"ruleId":"78","severity":1,"message":"82","line":1,"column":10,"nodeType":"80","messageId":"81","endLine":1,"endColumn":15},{"ruleId":"78","severity":1,"message":"83","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":20},{"ruleId":"78","severity":1,"message":"84","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":16},{"ruleId":"78","severity":1,"message":"85","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":20},{"ruleId":"78","severity":1,"message":"86","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":21},{"ruleId":"78","severity":1,"message":"87","line":4,"column":7,"nodeType":"80","messageId":"81","endLine":4,"endColumn":12},{"ruleId":"88","severity":1,"message":"89","line":183,"column":45,"nodeType":"90","messageId":"91","endLine":183,"endColumn":47},{"ruleId":"78","severity":1,"message":"92","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'Coursework' is assigned a value but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'makeStyles' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'SKILL_ICONS' is defined but never used.","'style' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]